{
    "contractName": "WorkflowBaseMock",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "_id",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "_status",
                    "type": "uint64"
                }
            ],
            "name": "ItemUpdated",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "num",
                    "type": "uint256"
                }
            ],
            "name": "addItems",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "cnt",
                    "type": "uint256"
                }
            ],
            "name": "getLatestIds",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "cursor",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "howMany",
                    "type": "uint256"
                }
            ],
            "name": "getPageIds",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"_status\",\"type\":\"uint64\"}],\"name\":\"ItemUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"addItems\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cnt\",\"type\":\"uint256\"}],\"name\":\"getLatestIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cursor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"howMany\",\"type\":\"uint256\"}],\"name\":\"getPageIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Projects/Toolblox.Audit/Toolblox.Token/Contracts/Mocks/WorkflowBaseMock.sol\":\"WorkflowBaseMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"c:/Projects/Toolblox.Audit/Toolblox.Token/Contracts/Mocks/WorkflowBaseMock.sol\":{\"keccak256\":\"0xddf349ebbf21bde4a5c855b8b0919c864d0265df3490e0bff32312d86945515f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://550c2f5f48842d3508d93705060c08f3232bb2b618d3cc76b3e731da32dc1bb8\",\"dweb:/ipfs/QmTcw6YxKgkZcz8EVChdt6zUCUtUGbG8oUeMjSWGUEi4mk\"]},\"c:/Projects/Toolblox.Audit/Toolblox.Token/Contracts/WorkflowBase.sol\":{\"keccak256\":\"0x6143e3c14346d885c52c4b3450a163e3a168966e2a24b01584a4035f1a9b6c24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f5ea3b8c44bae6fe41044c4ac867982cb254b40d0d56ed2c10250f3730f934e\",\"dweb:/ipfs/QmNQ3nCa5q2LgWVcoLw6G1RjDpYebAcQiUL37Ggkp4KJtg\"]},\"c:/Projects/Toolblox.Audit/Toolblox.Token/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"c:/Projects/Toolblox.Audit/Toolblox.Token/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"c:/Projects/Toolblox.Audit/Toolblox.Token/node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"c:/Projects/Toolblox.Audit/Toolblox.Token/node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
    "bytecode": "60806040526000805534801561001457600080fd5b506103b0806100246000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306889aa81461004657806359f719f51461006f578063d7c116f914610082575b600080fd5b61005961005436600461027a565b610097565b604051610066919061029c565b60405180910390f35b61005961007d3660046102e0565b610141565b6100956100903660046102e0565b610234565b005b606060008267ffffffffffffffff8111156100b4576100b46102f9565b6040519080825280602002602001820160405280156100dd578160200160208202803683370190505b50905060005b60005485111580156100f457508381105b15610137578482828151811061010c5761010c61030f565b6020908102919091010152806101218161033b565b915050848061012f9061033b565b9550506100e3565b5090505b92915050565b600080546060918184101561015d5761015a8483610354565b90505b81811180610169575081155b1561018557505060408051600081526020810190915292915050565b60006101918284610354565b67ffffffffffffffff8111156101a9576101a96102f9565b6040519080825280602002602001820160405280156101d2578160200160208202803683370190505b5090506000825b84811015610229576101ec816001610367565b8383815181106101fe576101fe61030f565b6020908102919091010152816102138161033b565b92505080806102219061033b565b9150506101d9565b509095945050505050565b60005b8181101561025a5761024761025e565b50806102528161033b565b915050610237565b5050565b60008054818061026d8361033b565b9190505550600054905090565b6000806040838503121561028d57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156102d4578351835292840192918401916001016102b8565b50909695505050505050565b6000602082840312156102f257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161034d5761034d610325565b5060010190565b8181038181111561013b5761013b610325565b8082018082111561013b5761013b61032556fea2646970667358221220c73d3af7126e94813c07da54ef3a5e21be9f6d638338933fb551aad94125a23e64736f6c63430008130033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c806306889aa81461004657806359f719f51461006f578063d7c116f914610082575b600080fd5b61005961005436600461027a565b610097565b604051610066919061029c565b60405180910390f35b61005961007d3660046102e0565b610141565b6100956100903660046102e0565b610234565b005b606060008267ffffffffffffffff8111156100b4576100b46102f9565b6040519080825280602002602001820160405280156100dd578160200160208202803683370190505b50905060005b60005485111580156100f457508381105b15610137578482828151811061010c5761010c61030f565b6020908102919091010152806101218161033b565b915050848061012f9061033b565b9550506100e3565b5090505b92915050565b600080546060918184101561015d5761015a8483610354565b90505b81811180610169575081155b1561018557505060408051600081526020810190915292915050565b60006101918284610354565b67ffffffffffffffff8111156101a9576101a96102f9565b6040519080825280602002602001820160405280156101d2578160200160208202803683370190505b5090506000825b84811015610229576101ec816001610367565b8383815181106101fe576101fe61030f565b6020908102919091010152816102138161033b565b92505080806102219061033b565b9150506101d9565b509095945050505050565b60005b8181101561025a5761024761025e565b50806102528161033b565b915050610237565b5050565b60008054818061026d8361033b565b9190505550600054905090565b6000806040838503121561028d57600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b818110156102d4578351835292840192918401916001016102b8565b50909695505050505050565b6000602082840312156102f257600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161034d5761034d610325565b5060010190565b8181038181111561013b5761013b610325565b8082018082111561013b5761013b61032556fea2646970667358221220c73d3af7126e94813c07da54ef3a5e21be9f6d638338933fb551aad94125a23e64736f6c63430008130033",
    "sourceMap": "93:183:0:-:0;;;336:1:1;311:26;;93:183:0;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "93:183:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1028:304:1;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;528:497;;;;;;:::i;:::-;;:::i;142:131:0:-;;;;;;:::i;:::-;;:::i;:::-;;1028:304:1;1101:16;1124:28;1169:7;1155:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1155:22:1;;1124:53;;1182:11;1202:103;1219:5;;1209:6;:15;;:32;;;;;1234:7;1228:3;:13;1209:32;1202:103;;;1268:6;1249:11;1261:3;1249:16;;;;;;;;:::i;:::-;;;;;;;;;;:25;1280:5;;;;:::i;:::-;;;;1291:8;;;;;:::i;:::-;;;;1202:103;;;-1:-1:-1;1316:11:1;-1:-1:-1;1028:304:1;;;;;:::o;528:497::-;606:15;624:5;;583:16;;664:13;;;660:56;;;697:13;707:3;697:7;:13;:::i;:::-;685:25;;660:56;736:7;724:9;:19;:35;;;-1:-1:-1;747:12:1;;724:35;720:76;;;-1:-1:-1;;774:16:1;;;788:1;774:16;;;;;;;;;767:23;-1:-1:-1;;528:497:1:o;720:76::-;800:26;843:19;853:9;843:7;:19;:::i;:::-;829:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;829:34:1;-1:-1:-1;800:63:1;-1:-1:-1;868:19:1;910:9;896:104;925:7;921:1;:11;896:104;;;970:5;:1;974;970:5;:::i;:::-;945:9;955:11;945:22;;;;;;;;:::i;:::-;;;;;;;;;;:30;981:13;;;;:::i;:::-;;;;934:3;;;;;:::i;:::-;;;;896:104;;;-1:-1:-1;1011:9:1;;528:497;-1:-1:-1;;;;;528:497:1:o;142:131:0:-;198:9;193:73;217:3;213:1;:7;193:73;;;242:12;:10;:12::i;:::-;-1:-1:-1;222:3:0;;;;:::i;:::-;;;;193:73;;;;142:131;:::o;442:83:1:-;482:7;496;;482;;496;;;:::i;:::-;;;;;;515:5;;508:12;;442:83;:::o;14:248:6:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:6;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:6:o;267:632::-;438:2;490:21;;;560:13;;463:18;;;582:22;;;409:4;;438:2;661:15;;;;635:2;620:18;;;409:4;704:169;718:6;715:1;712:13;704:169;;;779:13;;767:26;;848:15;;;;813:12;;;;740:1;733:9;704:169;;;-1:-1:-1;890:3:6;;267:632;-1:-1:-1;;;;;;267:632:6:o;904:180::-;963:6;1016:2;1004:9;995:7;991:23;987:32;984:52;;;1032:1;1029;1022:12;984:52;-1:-1:-1;1055:23:6;;904:180;-1:-1:-1;904:180:6:o;1089:127::-;1150:10;1145:3;1141:20;1138:1;1131:31;1181:4;1178:1;1171:15;1205:4;1202:1;1195:15;1221:127;1282:10;1277:3;1273:20;1270:1;1263:31;1313:4;1310:1;1303:15;1337:4;1334:1;1327:15;1353:127;1414:10;1409:3;1405:20;1402:1;1395:31;1445:4;1442:1;1435:15;1469:4;1466:1;1459:15;1485:135;1524:3;1545:17;;;1542:43;;1565:18;;:::i;:::-;-1:-1:-1;1612:1:6;1601:13;;1485:135::o;1625:128::-;1692:9;;;1713:11;;;1710:37;;;1727:18;;:::i;1758:125::-;1823:9;;;1844:10;;;1841:36;;;1857:18;;:::i",
    "sourcePath": "c:/Projects/Toolblox.Audit/Toolblox.Token/Contracts/Mocks/WorkflowBaseMock.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "c:/Projects/Toolblox.Audit/Toolblox.Token/Contracts/Mocks/WorkflowBaseMock.sol",
        "exportedSymbols": {
            "Context": [
                419
            ],
            "IExternalServiceLocator": [
                397
            ],
            "Math": [
                1514
            ],
            "SignedMath": [
                1619
            ],
            "Strings": [
                648
            ],
            "WorkflowBase": [
                389
            ],
            "WorkflowBaseMock": [
                26
            ]
        },
        "id": 27,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "absolutePath": "c:/Projects/Toolblox.Audit/Toolblox.Token/Contracts/WorkflowBase.sol",
                "file": "../WorkflowBase.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 27,
                "sourceUnit": 398,
                "src": "60:29:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 3,
                            "name": "WorkflowBase",
                            "nameLocations": [
                                "122:12:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 389,
                            "src": "122:12:0"
                        },
                        "id": 4,
                        "nodeType": "InheritanceSpecifier",
                        "src": "122:12:0"
                    }
                ],
                "canonicalName": "WorkflowBaseMock",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 26,
                "linearizedBaseContracts": [
                    26,
                    389,
                    419
                ],
                "name": "WorkflowBaseMock",
                "nameLocation": "102:16:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 24,
                            "nodeType": "Block",
                            "src": "182:91:0",
                            "statements": [
                                {
                                    "body": {
                                        "id": 22,
                                        "nodeType": "Block",
                                        "src": "227:39:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [],
                                                    "expression": {
                                                        "argumentTypes": [],
                                                        "id": 19,
                                                        "name": "_getNextId",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 55,
                                                        "src": "242:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                                                            "typeString": "function () returns (uint256)"
                                                        }
                                                    },
                                                    "id": 20,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "242:12:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 21,
                                                "nodeType": "ExpressionStatement",
                                                "src": "242:12:0"
                                            }
                                        ]
                                    },
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 15,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 13,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "213:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "<",
                                        "rightExpression": {
                                            "id": 14,
                                            "name": "num",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 6,
                                            "src": "217:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "213:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 23,
                                    "initializationExpression": {
                                        "assignments": [
                                            10
                                        ],
                                        "declarations": [
                                            {
                                                "constant": false,
                                                "id": 10,
                                                "mutability": "mutable",
                                                "name": "i",
                                                "nameLocation": "206:1:0",
                                                "nodeType": "VariableDeclaration",
                                                "scope": 23,
                                                "src": "198:9:0",
                                                "stateVariable": false,
                                                "storageLocation": "default",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "typeName": {
                                                    "id": 9,
                                                    "name": "uint256",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "198:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "visibility": "internal"
                                            }
                                        ],
                                        "id": 12,
                                        "initialValue": {
                                            "hexValue": "30",
                                            "id": 11,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "210:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "nodeType": "VariableDeclarationStatement",
                                        "src": "198:13:0"
                                    },
                                    "loopExpression": {
                                        "expression": {
                                            "id": 17,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "222:3:0",
                                            "subExpression": {
                                                "id": 16,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10,
                                                "src": "222:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "id": 18,
                                        "nodeType": "ExpressionStatement",
                                        "src": "222:3:0"
                                    },
                                    "nodeType": "ForStatement",
                                    "src": "193:73:0"
                                }
                            ]
                        },
                        "functionSelector": "d7c116f9",
                        "id": 25,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "addItems",
                        "nameLocation": "151:8:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 7,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 6,
                                    "mutability": "mutable",
                                    "name": "num",
                                    "nameLocation": "168:3:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 25,
                                    "src": "160:11:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 5,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "160:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "159:13:0"
                        },
                        "returnParameters": {
                            "id": 8,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "182:0:0"
                        },
                        "scope": 26,
                        "src": "142:131:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 27,
                "src": "93:183:0",
                "usedErrors": []
            }
        ],
        "src": "33:243:0"
    },
    "functionHashes": {
        "addItems(uint256)": "d7c116f9",
        "getLatestIds(uint256)": "59f719f5",
        "getPageIds(uint256,uint256)": "06889aa8"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "188800",
            "executionCost": "5238",
            "totalCost": "194038"
        },
        "external": {
            "addItems(uint256)": "infinite",
            "getLatestIds(uint256)": "infinite",
            "getPageIds(uint256,uint256)": "infinite"
        }
    }
}